/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarpan.appspp.LuthfiDhiyaRamadhan.views;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tarpan.appspp.LuthfiDhiyaRamadhan.config.Koneksi;

/**
 *
 * @author TARPAN
 */
public class HistoryPembayaranViews extends javax.swing.JFrame {

    /**
     * Creates new form HistoryPembayaranViews
     */
    public HistoryPembayaranViews() {
        initComponents();
        tampilDataHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnKembali = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));

        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tarpan/appspp/LuthfiDhiyaRamadhan/assets/icons8_left_arrow_32px_1.png"))); // NOI18N
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("HISTORY PEMBAYARAN");

        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHistory);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tarpan/appspp/LuthfiDhiyaRamadhan/assets/icons8_search_16px_1.png"))); // NOI18N

        jLabel2.setText("SEARCH");

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addContainerGap(308, Short.MAX_VALUE))
                    .addComponent(jLabel1)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        DashboardViews dashboard = new DashboardViews();
        dashboard.dashPetugas();
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        // TODO add your handling code here:
        cariHistory();
        
    }//GEN-LAST:event_txtCariKeyPressed

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        cariHistory();
        
    }//GEN-LAST:event_txtCariKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistoryPembayaranViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistoryPembayaranViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistoryPembayaranViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistoryPembayaranViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HistoryPembayaranViews().setVisible(true);
            }
        });
    }
public void tampilDataHistory (){
    String [] judul = {"ID_PEMBAYARAN", "NAMA PETUGAS","NAMA SISWA","TANGGAL BAYAR", "BULAN DIBAYAR","TAHUN DIBAYAR", "NOMINAL SPP", "JUMLAH BAYAR"};
        DefaultTableModel model;
        
        model = new DefaultTableModel(judul, 0);
        tblHistory.setModel(model);
        
        try {
            Connection con = new Koneksi().konek();
            String sql ="SELECT pembayaran.*, siswa.nama,petugas.nama_petugas, spp.nominal FROM pembayaran "
                    + "INNER JOIN siswa ON pembayaran.nisn = siswa.nisn "
                    + "INNER JOIN spp ON spp.id_spp = siswa.id_spp "
                    + "INNER JOIN petugas ON pembayaran.id_petugas = petugas.id_petugas "
                    + "where id_pembayaran like '%"+txtCari.getText()+"%' OR nama like '%"+txtCari.getText()+"%' "
                    + "OR nama_petugas like '%"+txtCari.getText()+"%'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()){
                String id= rs.getString ("id_pembayaran");
                String nm_petugas= rs.getString("nama_petugas");
                String nama = rs.getString("nama");
                String tgl_bayar= rs.getString ("tgl_bayar");
                String bln_bayar= rs.getString("bulan_bayar");
                String thn_bayar= rs.getString("tahun_bayar");
                String nominal= rs.getString("nominal");
                 String jumlah= rs.getString("jumlah_pembayaran");
                String [] data = {id,nm_petugas,nama,tgl_bayar,bln_bayar, thn_bayar, nominal, jumlah};
                model.addRow(data);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
}
        
        public void cariHistory (){
    String [] judul = {"ID_PEMBAYARAN", "NAMA PETUGAS","NAMA SISWA","TANGGAL BAYAR", "BULAN DIBAYAR","TAHUN DIBAYAR", "NOMINAL SPP", "JUMLAH BAYAR"};
        DefaultTableModel model;
        
        model = new DefaultTableModel(judul, 0);
        tblHistory.setModel(model);
        
        try {
            Connection con = new Koneksi().konek();
            String sql ="SELECT pembayaran.*, siswa.nama,petugas.nama_petugas, spp.nominal FROM pembayaran "
                    + "INNER JOIN siswa ON pembayaran.nisn = siswa.nisn "
                    + "INNER JOIN spp ON spp.id_spp = siswa.id_spp "
                    + "INNER JOIN petugas ON pembayaran.id_petugas = petugas.id_petugas "
                    + "where id_pembayaran like '%"+txtCari.getText()+"%' OR nama like '%"+txtCari.getText()+"%' "
                    + "OR nama_petugas like '%"+txtCari.getText()+"%'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()){
                String id= rs.getString ("id_pembayaran");
                String nm_petugas= rs.getString("nama_petugas");
                String nama = rs.getString("nama");
                String tgl_bayar= rs.getString ("tgl_bayar");
                String bln_bayar= rs.getString("bulan_bayar");
                String thn_bayar= rs.getString("tahun_bayar");
                String nominal= rs.getString("nominal");
                 String jumlah= rs.getString("jumlah_pembayaran");
                String [] data = {id,nm_petugas,nama,tgl_bayar,bln_bayar,thn_bayar,nominal,jumlah};
                model.addRow(data);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
        
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistory;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
